<view class="black" catchtap="gotoTabBar">
  <view>1、wx.switchTab()</view>
  <view>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</view>
</view>

<view class="black" catchtap="goReLaunch">
  <view>2、wx.reLaunch()</view>
  <view>关闭所有页面，打开到应用内的某个页面</view>
</view>

<view class="black" catchtap="goRedirectTo">
  <view>3、wx.redirectTo()</view>
  <view>关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面</view>
</view>

<view class="black" catchtap="goNavigateTo">
  <view>4、wx.navigateTo()</view>
  <view>保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 wx.navigateBack 可以返回到原页面。可以使用events页面间通信接口传值</view>
</view>

<view class="black" catchtap="goNavigateBack">
  <view>5、wx.navigateBack()</view>
  <view>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层。</view>
</view>

<view class="black">
  <view>6、EventChannel</view>
  <view>EventChannel方法有四种：</view>
  <view>
  1.EventChannel.emit(string eventName, any args)
触发一个事件，在上面转跳示例4、中有使用到
  </view>
  <view>2.EventChannel.on(string eventName, EventCallback fn)
持续监听一个事件</view>
<view>3.EventChannel.once(string eventName, EventCallback fn)
监听一个事件一次，触发后失效</view>
<view>
4.EventChannel.off(string eventName, EventCallback fn)
取消监听一个事件。给出第二个参数时，只取消给出的监听函数，否则取消所有监听函数
</view>
</view>